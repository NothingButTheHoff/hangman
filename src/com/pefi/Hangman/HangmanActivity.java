package com.pefi.Hangman;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.view.Window;import android.widget.TextView;import android.widget.Toast;import java.util.Arrays;import java.util.Random;/** * Created by pererikfinstad on 26/08/14. */public class HangmanActivity extends Activity implements KeyboardFragment.OnItemSelectedListener{    private final static String TAG = "HangmanActivity";    private String  selectedWord;    private int numberOfWrongLetters = 0;    private int numberOfWins = 0;    private int numberOfGames = 0;    private String[] words;    private String usedWords[];    private int nextInt = 0;    TextView inputText;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        this.requestWindowFeature(Window.FEATURE_NO_TITLE);        setContentView(R.layout.hangman);        //get the list of words        words = getResources().getStringArray(R.array.word_array);        usedWords = new String[words.length];        System.out.println(randomWord());        System.out.println(getUsedWords());    }    @Override    public void onLetterSelected(int pos) {        // Capture the article fragment from the activity layout        System.out.println(randomWord());        System.out.println(getUsedWords());        System.out.println("Interfacet funker! Posisjonen er"+pos);    }    // METODER SOM MÅ IMPLEMENTERES    public String randomWord(){        Random rand = new Random();        //pick a random number        int randInt = rand.nextInt(words.length);        String word = words[randInt];        if (checkUsedWords(word, words)){            randomWord();        }        setUsedWords(word);        return word;    }    public static boolean checkUsedWords(String s, String[] a){        //sjekker om ordet allerede er brukt        for (int i = 0; i > a.length; i ++){            if (s.contains(a[i])){                return true;            }        }        return false;    }    public void setUsedWords(String s){        //setter ord som er plukket ut inn i et array for brukte ord        usedWords[nextInt] = s;        nextInt++;    }    public String getUsedWords(){        String[] s = usedWords;        return Arrays.toString(s);    }    public static void checkLetter(){        //sjekk om bokstaven finner i ordet        //true -> updateWord        //false ->setWrongLetter    }    public static void setWrongLetter(){        //hvis bokstaven ikke finnes i ordet, sett det inn i brukte bokstaver        //Øk variabelen for feil ord ++        // kall på gameOverToast og øk numberOfGames med 1 (++)    }    public static void updateWord(){        //sett bokstaven inn på rikig plass    }    public boolean compareWords(String s, String t){        //hvis utplukket ord er riktig og innskrevet ord er riktig return true        if (s.equals(t)){            increaseNumberOfWins();            return true;        }        return false;    }    public void increaseNumberOfWins(){        numberOfWins ++;    }    public int getNumberOfWrongLetters(){        int i = this.numberOfWrongLetters;        if (i > 6){            updateHangman(i);        }        return numberOfWrongLetters;    }    public int getNumberOfWins(){        //sjekker hvor mange seire brukeren har        return this.numberOfWins;    }    public static void updateHangman(int i){        switch (i) {            case 0:                //ingen grafikk                break;            case 1:                //galge vises                break;            case 2:                //hode vises                break;            case 3:                //kropp vises                break;            case 4:                //venstre arm                break;            case 5:                //høyre arm                break;            case 6:                //venstre fot                break;            case 7:                //høyre fot                break;            default:                //ingen grafikk        }//end of switch    }    public void gameOverToast(){        String text = getString(R.string.game_over);        Toast.makeText(this.getApplicationContext(), text, Toast.LENGTH_LONG ).show();    }    public void youWin(){        String text = getString(R.string.win);        Toast.makeText(this.getApplicationContext(), text, Toast.LENGTH_LONG ).show();    }    @Override    public void onBackPressed() {        Intent intent = new Intent(this, MainActivity.class);        startActivity(intent);    }} //end of class Hangman